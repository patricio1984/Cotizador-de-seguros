{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.008d2a30.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContenedorHeader =  styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: \"Slabo 27px\", serif;\r\n    text-align: center;\r\n`\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n     );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired,\r\n}\r\n \r\nexport default Header;","//Obtiene la diferencia de años\r\nexport const obtenerDiferenciaYear = year => {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n//Calcula el total a pagar según la marca\r\nexport const calcularMarca = marca => {\r\n    let incremento;\r\n\r\n    switch(marca) {\r\n        case \"audi\":\r\n            incremento = 1.30;\r\n            break;\r\n        case \"ford\":\r\n            incremento = 1.15;\r\n            break;\r\n        case \"hyundai\": \r\n            incremento = 1.05;\r\n            break;\r\n        default: \r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\n\r\n//Calcula el tipo de seguro\r\nexport const obtenerPlan = plan => {\r\n    return (plan === \"responsabilidadcivil\") ? 1.20 : 1.50;\r\n}\r\n\r\n//Muestra la primer letra mayuscula\r\nexport const primerMayuscula = texto => {\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, { useState } from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport PropTypes from \"prop-types\";\r\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from \"../helper\";\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover {\r\n        background-color: #26C6DA;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`\r\n\r\nconst Formulario = ({guardarResumen, guardarCargando}) => {\r\n\r\n    const [ datos, guardarDatos ] = useState({\r\n        marca: \"\",\r\n        year: \"\",\r\n        plan: \"\"\r\n    });\r\n    const [ error, guardarError ] = useState(false);\r\n\r\n    //extraer los valores del state\r\n    const { marca, year, plan } = datos;\r\n\r\n    //Leer los datos del formulario y colocarlos en el state\r\n    const obtenerInformacion = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //Cuando el usuario presiona submit\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n\r\n        if(marca.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\") {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        //Una base de 2000\r\n        let resultado = 2000;\r\n\r\n        // obtener la diferencia de años\r\n        const diferencia = obtenerDiferenciaYear(year);\r\n\r\n        // por cada año hay que restar el 3%\r\n        resultado -= ((diferencia * 3) * resultado) / 100;\r\n\r\n        //Ford 15%\r\n        //Hyundai 5%\r\n        //Audi 30%\r\n        resultado = calcularMarca(marca) * resultado;\r\n\r\n        //Responsabilidad civil aumenta 20%\r\n        //Terceros Completo 50%\r\n        const incrementoPlan = obtenerPlan(plan);\r\n        resultado =parseFloat(incrementoPlan * resultado).toFixed(2);\r\n\r\n        guardarCargando(true);\r\n\r\n        setTimeout(() => {\r\n\r\n            //Elimina el spinner\r\n            guardarCargando(false)\r\n\r\n            //pasa la información al componente principal\r\n            guardarResumen({\r\n                cotizacion: Number(resultado),\r\n                datos\r\n            })\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n\r\n            { error ? <Error>Todos los campos son obligatorios</Error> : null }\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"ford\">Ford</option>\r\n                    <option value=\"audi\">Audi</option>\r\n                    <option value=\"hyundai\">Hyundai</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2023\">2023</option>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio \r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"responsabilidad civil\"\r\n                    checked={plan === \"responsabilidad civil\"}\r\n                    onChange={obtenerInformacion}\r\n                /> Responsabilidad civil\r\n\r\n                <InputRadio \r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"tercero completo\"\r\n                    checked={plan === \"tercero completo\"}\r\n                    onChange={obtenerInformacion}\r\n                /> Terceros completo\r\n            </Campo>\r\n\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n        </form>\r\n        );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarResumen: PropTypes.func.isRequired,\r\n    guardarCargando: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport PropTypes from \"prop-types\";\r\nimport { primerMayuscula } from \"../helper\";\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #fff;\r\n    margin-top: 1rem;\r\n`\r\n\r\nconst Resumen = ({datos}) => {\r\n\r\n    //extraer de datos\r\n    const {marca, year, plan} = datos;\r\n\r\n    if(marca === \"\" || year === \"\" || plan === \"\") return null;\r\n\r\n    return ( \r\n        <ContenedorResumen>\r\n            <h2>Resumen de Cotización</h2>\r\n\r\n            <ul>\r\n                <li>Marca: {primerMayuscula(marca)} </li>\r\n                <li>Plan: {primerMayuscula(plan)} </li>\r\n                <li>Año del Auto: {year} </li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n     );\r\n}\r\n\r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Resumen;","import React from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"; \r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26C6DA;\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`\r\n\r\nconst Resultado = ({cotizacion}) => {\r\n\r\n    return ( \r\n        (cotizacion === 0) \r\n            ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje> \r\n            : \r\n                (\r\n                    <ResultadoCotizacion>\r\n                        <TransitionGroup\r\n                            component=\"span\"\r\n                            className=\"resultado\"\r\n                        >\r\n                            <CSSTransition\r\n                                classNames=\"resultado\"\r\n                                key={cotizacion}\r\n                                timeout={{enter: 500, exit: 500}}\r\n                            >\r\n                                <TextoCotizacion>El total es: $ <span>{cotizacion}</span></TextoCotizacion>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                    </ResultadoCotizacion> \r\n                )\r\n     );\r\n}\r\n\r\nResultado.propTypes = {\r\n    cotizacion: PropTypes.number.isRequired,\r\n}\r\n \r\nexport default Resultado;","import React from 'react';\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"></div>\r\n            <div className=\"sk-circle2 sk-child\"></div>\r\n            <div className=\"sk-circle3 sk-child\"></div>\r\n            <div className=\"sk-circle4 sk-child\"></div>\r\n            <div className=\"sk-circle5 sk-child\"></div>\r\n            <div className=\"sk-circle6 sk-child\"></div>\r\n            <div className=\"sk-circle7 sk-child\"></div>\r\n            <div className=\"sk-circle8 sk-child\"></div>\r\n            <div className=\"sk-circle9 sk-child\"></div>\r\n            <div className=\"sk-circle10 sk-child\"></div>\r\n            <div className=\"sk-circle11 sk-child\"></div>\r\n            <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\n\nimport styled from \"@emotion/styled\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFFFFF;\n  padding: 3rem;\n`\n\nfunction App() {\n\n  const [ resumen, guardarResumen ] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: \"\",\n      year: \"\",\n      plan: \"\"\n    }\n  });\n\n  const [ cargando, guardarCargando ] = useState(false)\n\n  //extraer datos\n  const { cotizacion ,datos } = resumen;\n\n  return (\n    <Contenedor>\n        <Header \n          titulo=\"Cotizador de Seguros\"\n        />\n        <ContenedorFormulario>\n            <Formulario\n              guardarResumen={guardarResumen}\n              guardarCargando={guardarCargando}\n            />\n\n            { cargando ? <Spinner /> : null }\n\n            <Resumen\n              datos={datos}\n            />\n\n            { !cargando \n              ? <Resultado\n                  cotizacion={cotizacion}\n                />\n              : null\n            }\n           \n        </ContenedorFormulario>\n    </Contenedor>  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}